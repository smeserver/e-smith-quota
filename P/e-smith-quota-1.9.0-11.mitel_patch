Index: e-smith-quota/e-smith-quota.spec
diff -u e-smith-quota/root/etc/e-smith/templates/usr/lib/e-smith-quota/adminQuotaSummary.tmpl:1.8 e-smith-quota/root/etc/e-smith/templates/usr/lib/e-smith-quota/adminQuotaSummary.tmpl:1.9
--- e-smith-quota/root/etc/e-smith/templates/usr/lib/e-smith-quota/adminQuotaSummary.tmpl:1.8	Fri May 30 16:29:57 2003
+++ e-smith-quota/root/etc/e-smith/templates/usr/lib/e-smith-quota/adminQuotaSummary.tmpl	Tue Jul 19 23:11:14 2005
@@ -1,13 +1,12 @@
 {
-    use esmith::db;
     use esmith::I18N;
     use Locale::gettext;
     
     my $i18n = new esmith::I18N;
     $i18n->setLocale('adminQuotaSummary.tmpl');
 
-    my $domain = db_get(\%conf, "DomainName") || "localhost";
-    my $systemName = db_get(\%conf, "SystemName") || "SME Server";
+    my $domain = $conf->get_value("DomainName") || "localhost";
+    my $systemName = $conf->get_value("SystemName") || "SME Server";
 
     $OUT .= "To: ".gettext("System Administrator")." <admin\@${domain}>\n";
     $OUT .= "From: \"".
Index: e-smith-quota/root/etc/e-smith/templates/usr/lib/e-smith-quota/userOverQuota.tmpl
diff -u e-smith-quota/root/etc/e-smith/templates/usr/lib/e-smith-quota/userOverQuota.tmpl:1.8 e-smith-quota/root/etc/e-smith/templates/usr/lib/e-smith-quota/userOverQuota.tmpl:1.9
--- e-smith-quota/root/etc/e-smith/templates/usr/lib/e-smith-quota/userOverQuota.tmpl:1.8	Fri May 30 16:29:57 2003
+++ e-smith-quota/root/etc/e-smith/templates/usr/lib/e-smith-quota/userOverQuota.tmpl	Tue Jul 19 23:11:14 2005
@@ -1,13 +1,12 @@
 {
-    use esmith::db;
     use esmith::I18N;
     use Locale::gettext;
 
     my $i18n = new esmith::I18N;
     $i18n->setLocale('userOverQuota.tmpl');
 
-    my $domain = db_get(\%conf, "DomainName") || "localhost";
-    my $systemName = db_get(\%conf, "SystemName") || "SME Server";
+    my $domain = $conf->get_value("DomainName") || "localhost";
+    my $systemName = $conf->get_value("SystemName") || "SME Server";
 
     my $gracePeriodEnds = localtime($data{gracePeriod});
 
Index: e-smith-quota/root/sbin/e-smith/warnquota
diff -u e-smith-quota/root/sbin/e-smith/warnquota:1.6 e-smith-quota/root/sbin/e-smith/warnquota:1.7
--- e-smith-quota/root/sbin/e-smith/warnquota:1.6	Thu Mar 17 16:29:55 2005
+++ e-smith-quota/root/sbin/e-smith/warnquota	Tue Jul 19 23:11:14 2005
@@ -4,7 +4,7 @@
 
 use strict;
 
-use esmith::config;
+use esmith::ConfigDB;
 use esmith::util;
 use esmith::db;
 
@@ -18,9 +18,7 @@
 sub toMBNoDecimalPlaces ($);
 sub toKB ($);
 
-my %conf;
-tie %conf, 'esmith::config';
-
+my $conf = esmith::ConfigDB->open_ro;
 
 =for testing
 is( system("$^X -cw $Original_File 2>&1"), 0, 'it compiles' );
@@ -40,13 +38,13 @@
 # headers (From, Return-Path)
 #----------------------------------------------------------------------
 
-my $domain = db_get(\%conf, "DomainName") || 'localhost';
+my $domain = $conf->get_value("DomainName") || 'localhost';
 
 my ($quotaOffenders, $quotaUsers, $quotalessUsers) 
 	= getUserQuotas();
 
-alertUsersOverQuota(\%conf, $quotaOffenders);
-sendAdminSummary(\%conf, $quotaOffenders, $quotaUsers, $quotalessUsers);
+alertUsersOverQuota($conf, $quotaOffenders);
+sendAdminSummary($conf, $quotaOffenders, $quotaUsers, $quotalessUsers);
 
 =head2 getUserQuotas()
 
@@ -91,8 +89,8 @@
 {
     use Quota;
 
-    my %accounts;
-    tie %accounts, 'esmith::config', '/home/e-smith/accounts';
+    use esmith::AccountsDB;
+    my $adb = esmith::AccountsDB->open_ro();
 
     my %usersOverQuota;
     my %usersUnderQuota;
@@ -102,28 +100,15 @@
     my $dev = Quota::getqcarg('/home/e-smith/files');
 
     #------------------------------------------------------------
-    # Look up accounts and user names
-    #------------------------------------------------------------
-
-    my @userAccounts = sort
-	grep { db_get_type(\%accounts, $_) eq "user" } db_get(\%accounts);
-
-    #------------------------------------------------------------
-    # Exit early if there aren't any user accounts.
-    #------------------------------------------------------------
-
-    exit unless (scalar @userAccounts);
-
-    #------------------------------------------------------------
     # Loop through all user accounts and collect stats.
     #------------------------------------------------------------
 
-    foreach my $user (@userAccounts)
+    foreach my $user ($adb->users)
     {
-	my $uid = getpwnam($user);
+	my $uid = getpwnam($user->key);
 	unless ($uid)
 	{
-	    warn("Could not get uid for user \"$user\"");
+	    warn("Could not get uid for user \"" . $user->key ."\"");
 	    next;
 	}
 	my ($bc, $bs, $bh, $bt, $ic, $is, $ih, $it) =
@@ -131,14 +116,12 @@
 
         if( !defined $bc )     # Quota::query failed
         {
-            warn "Cannot query your quota for '$user' on '$dev'\n";
+            warn "Cannot query your quota for '" . $user->key . "' on '$dev'\n";
             warn "Quota error (are you using NFS?): ", Quota::strerr(), "\n";
             next;
         }
 
-	my $name = db_get_prop(\%accounts, $user, "FirstName")
-	    . " "
-	    . db_get_prop(\%accounts, $user, "LastName");
+	my $name = $user->prop('FirstName') . " " . $user->prop('LastName');
 
 	#------------------------------------------------------------
 	# Collect user stats if over quota.
@@ -151,8 +134,8 @@
 	{
 	    # User has no quota
 	    # Add user to data structure.
-	    ${usersWithNoQuota{$user}} = { 
-				   username => $user,
+	    ${usersWithNoQuota{$user->key}} = { 
+				   username => $user->key,
 				   fullname => $name,
 				   usage => toMB($bc),
 	    			   softQuota => toMB($bs),
@@ -166,8 +149,8 @@
 	    # gracePeriod is 0 if over hard limit
 
 	    # Add user to data structure.
-	    ${usersOverQuota{$user}} = { 
-				   username => $user,
+	    ${usersOverQuota{$user->key}} = { 
+				   username => $user->key,
 				   fullname => $name,
 				   usage => toMB($bc),
 	    			   softQuota => toMB($bs),
@@ -179,8 +162,8 @@
 	{
 	    # User is within quota
 	    # Add user to data structure.
-	    ${usersUnderQuota{$user}} = { 
-				   username => $user,
+	    ${usersUnderQuota{$user->key}} = { 
+				   username => $user->key,
 				   fullname => $name,
 				   usage => toMB($bc),
 	    			   softQuota => toMB($bs),
